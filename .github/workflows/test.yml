name: Go Tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    name: Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - name: Display Go version
        run: go version

      - name: Download dependencies
        run: go mod tidy

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Start Docker on macOS
        if: runner.os == 'macOS'
        run: |
          open -a Docker
          while ! docker system info > /dev/null 2>&1; do
            echo "Waiting for Docker daemon..."
            sleep 1
          done
      - name: Start services
        run: docker compose -f docker-compose.e2e.yaml up -d --build

      - name: Wait for API to be healthy
        shell: bash
        run: |
          echo "Waiting for API..."
          for i in {1..30}; do
            if curl -sf http://localhost:8080/health; then
              echo "API is up!"
              exit 0
            fi
            sleep 1
          done
          echo "API did not start in time."
          exit 1

      - name: Run tests with coverage
        run: |
          go test -v -coverprofile='coverage.out' ./...

      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ runner.os }}
          path: coverage.out

      - name: Stop services
        if: always()
        run: docker compose -f docker-compose.e2e.yaml down
